// Code generated by ent, DO NOT EDIT.

package course

import (
	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/jhana-app/jhana-app/ent/gqlid"
	"github.com/jhana-app/jhana-app/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id gqlid.CourseID) predicate.Course {
	return predicate.Course(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id gqlid.CourseID) predicate.Course {
	return predicate.Course(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id gqlid.CourseID) predicate.Course {
	return predicate.Course(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...gqlid.CourseID) predicate.Course {
	return predicate.Course(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...gqlid.CourseID) predicate.Course {
	return predicate.Course(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id gqlid.CourseID) predicate.Course {
	return predicate.Course(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id gqlid.CourseID) predicate.Course {
	return predicate.Course(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id gqlid.CourseID) predicate.Course {
	return predicate.Course(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id gqlid.CourseID) predicate.Course {
	return predicate.Course(sql.FieldLTE(FieldID, id))
}

// IconImage applies equality check predicate on the "iconImage" field. It's identical to IconImageEQ.
func IconImage(v string) predicate.Course {
	return predicate.Course(sql.FieldEQ(FieldIconImage, v))
}

// CoverImage applies equality check predicate on the "coverImage" field. It's identical to CoverImageEQ.
func CoverImage(v string) predicate.Course {
	return predicate.Course(sql.FieldEQ(FieldCoverImage, v))
}

// Title applies equality check predicate on the "title" field. It's identical to TitleEQ.
func Title(v string) predicate.Course {
	return predicate.Course(sql.FieldEQ(FieldTitle, v))
}

// Description applies equality check predicate on the "description" field. It's identical to DescriptionEQ.
func Description(v string) predicate.Course {
	return predicate.Course(sql.FieldEQ(FieldDescription, v))
}

// Color applies equality check predicate on the "color" field. It's identical to ColorEQ.
func Color(v string) predicate.Course {
	return predicate.Course(sql.FieldEQ(FieldColor, v))
}

// Active applies equality check predicate on the "active" field. It's identical to ActiveEQ.
func Active(v bool) predicate.Course {
	return predicate.Course(sql.FieldEQ(FieldActive, v))
}

// Order applies equality check predicate on the "order" field. It's identical to OrderEQ.
func Order(v int) predicate.Course {
	return predicate.Course(sql.FieldEQ(FieldOrder, v))
}

// IconImageEQ applies the EQ predicate on the "iconImage" field.
func IconImageEQ(v string) predicate.Course {
	return predicate.Course(sql.FieldEQ(FieldIconImage, v))
}

// IconImageNEQ applies the NEQ predicate on the "iconImage" field.
func IconImageNEQ(v string) predicate.Course {
	return predicate.Course(sql.FieldNEQ(FieldIconImage, v))
}

// IconImageIn applies the In predicate on the "iconImage" field.
func IconImageIn(vs ...string) predicate.Course {
	return predicate.Course(sql.FieldIn(FieldIconImage, vs...))
}

// IconImageNotIn applies the NotIn predicate on the "iconImage" field.
func IconImageNotIn(vs ...string) predicate.Course {
	return predicate.Course(sql.FieldNotIn(FieldIconImage, vs...))
}

// IconImageGT applies the GT predicate on the "iconImage" field.
func IconImageGT(v string) predicate.Course {
	return predicate.Course(sql.FieldGT(FieldIconImage, v))
}

// IconImageGTE applies the GTE predicate on the "iconImage" field.
func IconImageGTE(v string) predicate.Course {
	return predicate.Course(sql.FieldGTE(FieldIconImage, v))
}

// IconImageLT applies the LT predicate on the "iconImage" field.
func IconImageLT(v string) predicate.Course {
	return predicate.Course(sql.FieldLT(FieldIconImage, v))
}

// IconImageLTE applies the LTE predicate on the "iconImage" field.
func IconImageLTE(v string) predicate.Course {
	return predicate.Course(sql.FieldLTE(FieldIconImage, v))
}

// IconImageContains applies the Contains predicate on the "iconImage" field.
func IconImageContains(v string) predicate.Course {
	return predicate.Course(sql.FieldContains(FieldIconImage, v))
}

// IconImageHasPrefix applies the HasPrefix predicate on the "iconImage" field.
func IconImageHasPrefix(v string) predicate.Course {
	return predicate.Course(sql.FieldHasPrefix(FieldIconImage, v))
}

// IconImageHasSuffix applies the HasSuffix predicate on the "iconImage" field.
func IconImageHasSuffix(v string) predicate.Course {
	return predicate.Course(sql.FieldHasSuffix(FieldIconImage, v))
}

// IconImageEqualFold applies the EqualFold predicate on the "iconImage" field.
func IconImageEqualFold(v string) predicate.Course {
	return predicate.Course(sql.FieldEqualFold(FieldIconImage, v))
}

// IconImageContainsFold applies the ContainsFold predicate on the "iconImage" field.
func IconImageContainsFold(v string) predicate.Course {
	return predicate.Course(sql.FieldContainsFold(FieldIconImage, v))
}

// CoverImageEQ applies the EQ predicate on the "coverImage" field.
func CoverImageEQ(v string) predicate.Course {
	return predicate.Course(sql.FieldEQ(FieldCoverImage, v))
}

// CoverImageNEQ applies the NEQ predicate on the "coverImage" field.
func CoverImageNEQ(v string) predicate.Course {
	return predicate.Course(sql.FieldNEQ(FieldCoverImage, v))
}

// CoverImageIn applies the In predicate on the "coverImage" field.
func CoverImageIn(vs ...string) predicate.Course {
	return predicate.Course(sql.FieldIn(FieldCoverImage, vs...))
}

// CoverImageNotIn applies the NotIn predicate on the "coverImage" field.
func CoverImageNotIn(vs ...string) predicate.Course {
	return predicate.Course(sql.FieldNotIn(FieldCoverImage, vs...))
}

// CoverImageGT applies the GT predicate on the "coverImage" field.
func CoverImageGT(v string) predicate.Course {
	return predicate.Course(sql.FieldGT(FieldCoverImage, v))
}

// CoverImageGTE applies the GTE predicate on the "coverImage" field.
func CoverImageGTE(v string) predicate.Course {
	return predicate.Course(sql.FieldGTE(FieldCoverImage, v))
}

// CoverImageLT applies the LT predicate on the "coverImage" field.
func CoverImageLT(v string) predicate.Course {
	return predicate.Course(sql.FieldLT(FieldCoverImage, v))
}

// CoverImageLTE applies the LTE predicate on the "coverImage" field.
func CoverImageLTE(v string) predicate.Course {
	return predicate.Course(sql.FieldLTE(FieldCoverImage, v))
}

// CoverImageContains applies the Contains predicate on the "coverImage" field.
func CoverImageContains(v string) predicate.Course {
	return predicate.Course(sql.FieldContains(FieldCoverImage, v))
}

// CoverImageHasPrefix applies the HasPrefix predicate on the "coverImage" field.
func CoverImageHasPrefix(v string) predicate.Course {
	return predicate.Course(sql.FieldHasPrefix(FieldCoverImage, v))
}

// CoverImageHasSuffix applies the HasSuffix predicate on the "coverImage" field.
func CoverImageHasSuffix(v string) predicate.Course {
	return predicate.Course(sql.FieldHasSuffix(FieldCoverImage, v))
}

// CoverImageEqualFold applies the EqualFold predicate on the "coverImage" field.
func CoverImageEqualFold(v string) predicate.Course {
	return predicate.Course(sql.FieldEqualFold(FieldCoverImage, v))
}

// CoverImageContainsFold applies the ContainsFold predicate on the "coverImage" field.
func CoverImageContainsFold(v string) predicate.Course {
	return predicate.Course(sql.FieldContainsFold(FieldCoverImage, v))
}

// TitleEQ applies the EQ predicate on the "title" field.
func TitleEQ(v string) predicate.Course {
	return predicate.Course(sql.FieldEQ(FieldTitle, v))
}

// TitleNEQ applies the NEQ predicate on the "title" field.
func TitleNEQ(v string) predicate.Course {
	return predicate.Course(sql.FieldNEQ(FieldTitle, v))
}

// TitleIn applies the In predicate on the "title" field.
func TitleIn(vs ...string) predicate.Course {
	return predicate.Course(sql.FieldIn(FieldTitle, vs...))
}

// TitleNotIn applies the NotIn predicate on the "title" field.
func TitleNotIn(vs ...string) predicate.Course {
	return predicate.Course(sql.FieldNotIn(FieldTitle, vs...))
}

// TitleGT applies the GT predicate on the "title" field.
func TitleGT(v string) predicate.Course {
	return predicate.Course(sql.FieldGT(FieldTitle, v))
}

// TitleGTE applies the GTE predicate on the "title" field.
func TitleGTE(v string) predicate.Course {
	return predicate.Course(sql.FieldGTE(FieldTitle, v))
}

// TitleLT applies the LT predicate on the "title" field.
func TitleLT(v string) predicate.Course {
	return predicate.Course(sql.FieldLT(FieldTitle, v))
}

// TitleLTE applies the LTE predicate on the "title" field.
func TitleLTE(v string) predicate.Course {
	return predicate.Course(sql.FieldLTE(FieldTitle, v))
}

// TitleContains applies the Contains predicate on the "title" field.
func TitleContains(v string) predicate.Course {
	return predicate.Course(sql.FieldContains(FieldTitle, v))
}

// TitleHasPrefix applies the HasPrefix predicate on the "title" field.
func TitleHasPrefix(v string) predicate.Course {
	return predicate.Course(sql.FieldHasPrefix(FieldTitle, v))
}

// TitleHasSuffix applies the HasSuffix predicate on the "title" field.
func TitleHasSuffix(v string) predicate.Course {
	return predicate.Course(sql.FieldHasSuffix(FieldTitle, v))
}

// TitleEqualFold applies the EqualFold predicate on the "title" field.
func TitleEqualFold(v string) predicate.Course {
	return predicate.Course(sql.FieldEqualFold(FieldTitle, v))
}

// TitleContainsFold applies the ContainsFold predicate on the "title" field.
func TitleContainsFold(v string) predicate.Course {
	return predicate.Course(sql.FieldContainsFold(FieldTitle, v))
}

// DescriptionEQ applies the EQ predicate on the "description" field.
func DescriptionEQ(v string) predicate.Course {
	return predicate.Course(sql.FieldEQ(FieldDescription, v))
}

// DescriptionNEQ applies the NEQ predicate on the "description" field.
func DescriptionNEQ(v string) predicate.Course {
	return predicate.Course(sql.FieldNEQ(FieldDescription, v))
}

// DescriptionIn applies the In predicate on the "description" field.
func DescriptionIn(vs ...string) predicate.Course {
	return predicate.Course(sql.FieldIn(FieldDescription, vs...))
}

// DescriptionNotIn applies the NotIn predicate on the "description" field.
func DescriptionNotIn(vs ...string) predicate.Course {
	return predicate.Course(sql.FieldNotIn(FieldDescription, vs...))
}

// DescriptionGT applies the GT predicate on the "description" field.
func DescriptionGT(v string) predicate.Course {
	return predicate.Course(sql.FieldGT(FieldDescription, v))
}

// DescriptionGTE applies the GTE predicate on the "description" field.
func DescriptionGTE(v string) predicate.Course {
	return predicate.Course(sql.FieldGTE(FieldDescription, v))
}

// DescriptionLT applies the LT predicate on the "description" field.
func DescriptionLT(v string) predicate.Course {
	return predicate.Course(sql.FieldLT(FieldDescription, v))
}

// DescriptionLTE applies the LTE predicate on the "description" field.
func DescriptionLTE(v string) predicate.Course {
	return predicate.Course(sql.FieldLTE(FieldDescription, v))
}

// DescriptionContains applies the Contains predicate on the "description" field.
func DescriptionContains(v string) predicate.Course {
	return predicate.Course(sql.FieldContains(FieldDescription, v))
}

// DescriptionHasPrefix applies the HasPrefix predicate on the "description" field.
func DescriptionHasPrefix(v string) predicate.Course {
	return predicate.Course(sql.FieldHasPrefix(FieldDescription, v))
}

// DescriptionHasSuffix applies the HasSuffix predicate on the "description" field.
func DescriptionHasSuffix(v string) predicate.Course {
	return predicate.Course(sql.FieldHasSuffix(FieldDescription, v))
}

// DescriptionEqualFold applies the EqualFold predicate on the "description" field.
func DescriptionEqualFold(v string) predicate.Course {
	return predicate.Course(sql.FieldEqualFold(FieldDescription, v))
}

// DescriptionContainsFold applies the ContainsFold predicate on the "description" field.
func DescriptionContainsFold(v string) predicate.Course {
	return predicate.Course(sql.FieldContainsFold(FieldDescription, v))
}

// ColorEQ applies the EQ predicate on the "color" field.
func ColorEQ(v string) predicate.Course {
	return predicate.Course(sql.FieldEQ(FieldColor, v))
}

// ColorNEQ applies the NEQ predicate on the "color" field.
func ColorNEQ(v string) predicate.Course {
	return predicate.Course(sql.FieldNEQ(FieldColor, v))
}

// ColorIn applies the In predicate on the "color" field.
func ColorIn(vs ...string) predicate.Course {
	return predicate.Course(sql.FieldIn(FieldColor, vs...))
}

// ColorNotIn applies the NotIn predicate on the "color" field.
func ColorNotIn(vs ...string) predicate.Course {
	return predicate.Course(sql.FieldNotIn(FieldColor, vs...))
}

// ColorGT applies the GT predicate on the "color" field.
func ColorGT(v string) predicate.Course {
	return predicate.Course(sql.FieldGT(FieldColor, v))
}

// ColorGTE applies the GTE predicate on the "color" field.
func ColorGTE(v string) predicate.Course {
	return predicate.Course(sql.FieldGTE(FieldColor, v))
}

// ColorLT applies the LT predicate on the "color" field.
func ColorLT(v string) predicate.Course {
	return predicate.Course(sql.FieldLT(FieldColor, v))
}

// ColorLTE applies the LTE predicate on the "color" field.
func ColorLTE(v string) predicate.Course {
	return predicate.Course(sql.FieldLTE(FieldColor, v))
}

// ColorContains applies the Contains predicate on the "color" field.
func ColorContains(v string) predicate.Course {
	return predicate.Course(sql.FieldContains(FieldColor, v))
}

// ColorHasPrefix applies the HasPrefix predicate on the "color" field.
func ColorHasPrefix(v string) predicate.Course {
	return predicate.Course(sql.FieldHasPrefix(FieldColor, v))
}

// ColorHasSuffix applies the HasSuffix predicate on the "color" field.
func ColorHasSuffix(v string) predicate.Course {
	return predicate.Course(sql.FieldHasSuffix(FieldColor, v))
}

// ColorEqualFold applies the EqualFold predicate on the "color" field.
func ColorEqualFold(v string) predicate.Course {
	return predicate.Course(sql.FieldEqualFold(FieldColor, v))
}

// ColorContainsFold applies the ContainsFold predicate on the "color" field.
func ColorContainsFold(v string) predicate.Course {
	return predicate.Course(sql.FieldContainsFold(FieldColor, v))
}

// ActiveEQ applies the EQ predicate on the "active" field.
func ActiveEQ(v bool) predicate.Course {
	return predicate.Course(sql.FieldEQ(FieldActive, v))
}

// ActiveNEQ applies the NEQ predicate on the "active" field.
func ActiveNEQ(v bool) predicate.Course {
	return predicate.Course(sql.FieldNEQ(FieldActive, v))
}

// OrderEQ applies the EQ predicate on the "order" field.
func OrderEQ(v int) predicate.Course {
	return predicate.Course(sql.FieldEQ(FieldOrder, v))
}

// OrderNEQ applies the NEQ predicate on the "order" field.
func OrderNEQ(v int) predicate.Course {
	return predicate.Course(sql.FieldNEQ(FieldOrder, v))
}

// OrderIn applies the In predicate on the "order" field.
func OrderIn(vs ...int) predicate.Course {
	return predicate.Course(sql.FieldIn(FieldOrder, vs...))
}

// OrderNotIn applies the NotIn predicate on the "order" field.
func OrderNotIn(vs ...int) predicate.Course {
	return predicate.Course(sql.FieldNotIn(FieldOrder, vs...))
}

// OrderGT applies the GT predicate on the "order" field.
func OrderGT(v int) predicate.Course {
	return predicate.Course(sql.FieldGT(FieldOrder, v))
}

// OrderGTE applies the GTE predicate on the "order" field.
func OrderGTE(v int) predicate.Course {
	return predicate.Course(sql.FieldGTE(FieldOrder, v))
}

// OrderLT applies the LT predicate on the "order" field.
func OrderLT(v int) predicate.Course {
	return predicate.Course(sql.FieldLT(FieldOrder, v))
}

// OrderLTE applies the LTE predicate on the "order" field.
func OrderLTE(v int) predicate.Course {
	return predicate.Course(sql.FieldLTE(FieldOrder, v))
}

// HasUnits applies the HasEdge predicate on the "units" edge.
func HasUnits() predicate.Course {
	return predicate.Course(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2M, true, UnitsTable, UnitsColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasUnitsWith applies the HasEdge predicate on the "units" edge with a given conditions (other predicates).
func HasUnitsWith(preds ...predicate.Unit) predicate.Course {
	return predicate.Course(func(s *sql.Selector) {
		step := newUnitsStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Course) predicate.Course {
	return predicate.Course(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Course) predicate.Course {
	return predicate.Course(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Course) predicate.Course {
	return predicate.Course(sql.NotPredicates(p))
}
