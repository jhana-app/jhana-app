// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/jhana-app/jhana-app/ent/authtoken"
	"github.com/jhana-app/jhana-app/ent/content"
	"github.com/jhana-app/jhana-app/ent/contentepisode"
	"github.com/jhana-app/jhana-app/ent/contentprogress"
	"github.com/jhana-app/jhana-app/ent/course"
	"github.com/jhana-app/jhana-app/ent/journalrecord"
	"github.com/jhana-app/jhana-app/ent/lesson"
	"github.com/jhana-app/jhana-app/ent/lessonaudio"
	"github.com/jhana-app/jhana-app/ent/schema"
	"github.com/jhana-app/jhana-app/ent/technique"
	"github.com/jhana-app/jhana-app/ent/unit"
	"github.com/jhana-app/jhana-app/ent/user"
	"github.com/jhana-app/jhana-app/ent/userprogress"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	authtokenFields := schema.AuthToken{}.Fields()
	_ = authtokenFields
	// authtokenDescJwtID is the schema descriptor for jwt_id field.
	authtokenDescJwtID := authtokenFields[1].Descriptor()
	// authtoken.JwtIDValidator is a validator for the "jwt_id" field. It is called by the builders before save.
	authtoken.JwtIDValidator = authtokenDescJwtID.Validators[0].(func(string) error)
	contentFields := schema.Content{}.Fields()
	_ = contentFields
	// contentDescIconImage is the schema descriptor for iconImage field.
	contentDescIconImage := contentFields[2].Descriptor()
	// content.IconImageValidator is a validator for the "iconImage" field. It is called by the builders before save.
	content.IconImageValidator = contentDescIconImage.Validators[0].(func(string) error)
	// contentDescCoverImage is the schema descriptor for coverImage field.
	contentDescCoverImage := contentFields[3].Descriptor()
	// content.CoverImageValidator is a validator for the "coverImage" field. It is called by the builders before save.
	content.CoverImageValidator = contentDescCoverImage.Validators[0].(func(string) error)
	// contentDescTitle is the schema descriptor for title field.
	contentDescTitle := contentFields[4].Descriptor()
	// content.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	content.TitleValidator = contentDescTitle.Validators[0].(func(string) error)
	// contentDescSubtitle is the schema descriptor for subtitle field.
	contentDescSubtitle := contentFields[5].Descriptor()
	// content.SubtitleValidator is a validator for the "subtitle" field. It is called by the builders before save.
	content.SubtitleValidator = contentDescSubtitle.Validators[0].(func(string) error)
	// contentDescDescription is the schema descriptor for description field.
	contentDescDescription := contentFields[6].Descriptor()
	// content.DescriptionValidator is a validator for the "description" field. It is called by the builders before save.
	content.DescriptionValidator = contentDescDescription.Validators[0].(func(string) error)
	// contentDescIsHidden is the schema descriptor for isHidden field.
	contentDescIsHidden := contentFields[11].Descriptor()
	// content.DefaultIsHidden holds the default value on creation for the isHidden field.
	content.DefaultIsHidden = contentDescIsHidden.Default.(bool)
	// contentDescOrder is the schema descriptor for order field.
	contentDescOrder := contentFields[12].Descriptor()
	// content.OrderValidator is a validator for the "order" field. It is called by the builders before save.
	content.OrderValidator = contentDescOrder.Validators[0].(func(int) error)
	// contentDescEpisodesCount is the schema descriptor for episodesCount field.
	contentDescEpisodesCount := contentFields[13].Descriptor()
	// content.EpisodesCountValidator is a validator for the "episodesCount" field. It is called by the builders before save.
	content.EpisodesCountValidator = contentDescEpisodesCount.Validators[0].(func(int) error)
	contentepisodeFields := schema.ContentEpisode{}.Fields()
	_ = contentepisodeFields
	// contentepisodeDescTitle is the schema descriptor for title field.
	contentepisodeDescTitle := contentepisodeFields[3].Descriptor()
	// contentepisode.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	contentepisode.TitleValidator = contentepisodeDescTitle.Validators[0].(func(string) error)
	// contentepisodeDescSubtitle is the schema descriptor for subtitle field.
	contentepisodeDescSubtitle := contentepisodeFields[4].Descriptor()
	// contentepisode.SubtitleValidator is a validator for the "subtitle" field. It is called by the builders before save.
	contentepisode.SubtitleValidator = contentepisodeDescSubtitle.Validators[0].(func(string) error)
	// contentepisodeDescDescription is the schema descriptor for description field.
	contentepisodeDescDescription := contentepisodeFields[5].Descriptor()
	// contentepisode.DescriptionValidator is a validator for the "description" field. It is called by the builders before save.
	contentepisode.DescriptionValidator = contentepisodeDescDescription.Validators[0].(func(string) error)
	// contentepisodeDescDuration is the schema descriptor for duration field.
	contentepisodeDescDuration := contentepisodeFields[6].Descriptor()
	// contentepisode.DurationValidator is a validator for the "duration" field. It is called by the builders before save.
	contentepisode.DurationValidator = contentepisodeDescDuration.Validators[0].(func(int) error)
	// contentepisodeDescSource is the schema descriptor for source field.
	contentepisodeDescSource := contentepisodeFields[9].Descriptor()
	// contentepisode.DefaultSource holds the default value on creation for the source field.
	contentepisode.DefaultSource = contentepisodeDescSource.Default.(string)
	// contentepisodeDescSourceURL is the schema descriptor for sourceURL field.
	contentepisodeDescSourceURL := contentepisodeFields[10].Descriptor()
	// contentepisode.DefaultSourceURL holds the default value on creation for the sourceURL field.
	contentepisode.DefaultSourceURL = contentepisodeDescSourceURL.Default.(string)
	// contentepisodeDescLicence is the schema descriptor for licence field.
	contentepisodeDescLicence := contentepisodeFields[11].Descriptor()
	// contentepisode.DefaultLicence holds the default value on creation for the licence field.
	contentepisode.DefaultLicence = contentepisodeDescLicence.Default.(string)
	// contentepisodeDescLicenceURL is the schema descriptor for licenceURL field.
	contentepisodeDescLicenceURL := contentepisodeFields[12].Descriptor()
	// contentepisode.DefaultLicenceURL holds the default value on creation for the licenceURL field.
	contentepisode.DefaultLicenceURL = contentepisodeDescLicenceURL.Default.(string)
	// contentepisodeDescIsHidden is the schema descriptor for isHidden field.
	contentepisodeDescIsHidden := contentepisodeFields[13].Descriptor()
	// contentepisode.DefaultIsHidden holds the default value on creation for the isHidden field.
	contentepisode.DefaultIsHidden = contentepisodeDescIsHidden.Default.(bool)
	// contentepisodeDescOrder is the schema descriptor for order field.
	contentepisodeDescOrder := contentepisodeFields[14].Descriptor()
	// contentepisode.OrderValidator is a validator for the "order" field. It is called by the builders before save.
	contentepisode.OrderValidator = contentepisodeDescOrder.Validators[0].(func(int) error)
	contentprogressFields := schema.ContentProgress{}.Fields()
	_ = contentprogressFields
	// contentprogressDescProgress is the schema descriptor for progress field.
	contentprogressDescProgress := contentprogressFields[5].Descriptor()
	// contentprogress.DefaultProgress holds the default value on creation for the progress field.
	contentprogress.DefaultProgress = contentprogressDescProgress.Default.(int64)
	// contentprogressDescCreatedAt is the schema descriptor for createdAt field.
	contentprogressDescCreatedAt := contentprogressFields[7].Descriptor()
	// contentprogress.DefaultCreatedAt holds the default value on creation for the createdAt field.
	contentprogress.DefaultCreatedAt = contentprogressDescCreatedAt.Default.(func() time.Time)
	// contentprogressDescUpdatedAt is the schema descriptor for updatedAt field.
	contentprogressDescUpdatedAt := contentprogressFields[8].Descriptor()
	// contentprogress.DefaultUpdatedAt holds the default value on creation for the updatedAt field.
	contentprogress.DefaultUpdatedAt = contentprogressDescUpdatedAt.Default.(func() time.Time)
	courseFields := schema.Course{}.Fields()
	_ = courseFields
	// courseDescIconImage is the schema descriptor for iconImage field.
	courseDescIconImage := courseFields[1].Descriptor()
	// course.IconImageValidator is a validator for the "iconImage" field. It is called by the builders before save.
	course.IconImageValidator = courseDescIconImage.Validators[0].(func(string) error)
	// courseDescCoverImage is the schema descriptor for coverImage field.
	courseDescCoverImage := courseFields[2].Descriptor()
	// course.CoverImageValidator is a validator for the "coverImage" field. It is called by the builders before save.
	course.CoverImageValidator = courseDescCoverImage.Validators[0].(func(string) error)
	// courseDescTitle is the schema descriptor for title field.
	courseDescTitle := courseFields[3].Descriptor()
	// course.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	course.TitleValidator = courseDescTitle.Validators[0].(func(string) error)
	// courseDescDescription is the schema descriptor for description field.
	courseDescDescription := courseFields[4].Descriptor()
	// course.DescriptionValidator is a validator for the "description" field. It is called by the builders before save.
	course.DescriptionValidator = courseDescDescription.Validators[0].(func(string) error)
	// courseDescColor is the schema descriptor for color field.
	courseDescColor := courseFields[5].Descriptor()
	// course.ColorValidator is a validator for the "color" field. It is called by the builders before save.
	course.ColorValidator = courseDescColor.Validators[0].(func(string) error)
	// courseDescOrder is the schema descriptor for order field.
	courseDescOrder := courseFields[7].Descriptor()
	// course.OrderValidator is a validator for the "order" field. It is called by the builders before save.
	course.OrderValidator = courseDescOrder.Validators[0].(func(int) error)
	journalrecordFields := schema.JournalRecord{}.Fields()
	_ = journalrecordFields
	// journalrecordDescCreatedAt is the schema descriptor for createdAt field.
	journalrecordDescCreatedAt := journalrecordFields[6].Descriptor()
	// journalrecord.DefaultCreatedAt holds the default value on creation for the createdAt field.
	journalrecord.DefaultCreatedAt = journalrecordDescCreatedAt.Default.(func() time.Time)
	// journalrecordDescUpdatedAt is the schema descriptor for updatedAt field.
	journalrecordDescUpdatedAt := journalrecordFields[7].Descriptor()
	// journalrecord.DefaultUpdatedAt holds the default value on creation for the updatedAt field.
	journalrecord.DefaultUpdatedAt = journalrecordDescUpdatedAt.Default.(func() time.Time)
	// journalrecord.UpdateDefaultUpdatedAt holds the default value on update for the updatedAt field.
	journalrecord.UpdateDefaultUpdatedAt = journalrecordDescUpdatedAt.UpdateDefault.(func() time.Time)
	lessonFields := schema.Lesson{}.Fields()
	_ = lessonFields
	// lessonDescIconImage is the schema descriptor for iconImage field.
	lessonDescIconImage := lessonFields[3].Descriptor()
	// lesson.IconImageValidator is a validator for the "iconImage" field. It is called by the builders before save.
	lesson.IconImageValidator = lessonDescIconImage.Validators[0].(func(string) error)
	// lessonDescCoverImage is the schema descriptor for coverImage field.
	lessonDescCoverImage := lessonFields[4].Descriptor()
	// lesson.CoverImageValidator is a validator for the "coverImage" field. It is called by the builders before save.
	lesson.CoverImageValidator = lessonDescCoverImage.Validators[0].(func(string) error)
	// lessonDescTitle is the schema descriptor for title field.
	lessonDescTitle := lessonFields[5].Descriptor()
	// lesson.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	lesson.TitleValidator = lessonDescTitle.Validators[0].(func(string) error)
	// lessonDescDescription is the schema descriptor for description field.
	lessonDescDescription := lessonFields[6].Descriptor()
	// lesson.DescriptionValidator is a validator for the "description" field. It is called by the builders before save.
	lesson.DescriptionValidator = lessonDescDescription.Validators[0].(func(string) error)
	// lessonDescOrder is the schema descriptor for order field.
	lessonDescOrder := lessonFields[7].Descriptor()
	// lesson.OrderValidator is a validator for the "order" field. It is called by the builders before save.
	lesson.OrderValidator = lessonDescOrder.Validators[0].(func(int) error)
	lessonaudioFields := schema.LessonAudio{}.Fields()
	_ = lessonaudioFields
	// lessonaudioDescDuration is the schema descriptor for duration field.
	lessonaudioDescDuration := lessonaudioFields[3].Descriptor()
	// lessonaudio.DurationValidator is a validator for the "duration" field. It is called by the builders before save.
	lessonaudio.DurationValidator = lessonaudioDescDuration.Validators[0].(func(int) error)
	techniqueFields := schema.Technique{}.Fields()
	_ = techniqueFields
	// techniqueDescIconImage is the schema descriptor for iconImage field.
	techniqueDescIconImage := techniqueFields[2].Descriptor()
	// technique.IconImageValidator is a validator for the "iconImage" field. It is called by the builders before save.
	technique.IconImageValidator = techniqueDescIconImage.Validators[0].(func(string) error)
	// techniqueDescCoverImage is the schema descriptor for coverImage field.
	techniqueDescCoverImage := techniqueFields[3].Descriptor()
	// technique.CoverImageValidator is a validator for the "coverImage" field. It is called by the builders before save.
	technique.CoverImageValidator = techniqueDescCoverImage.Validators[0].(func(string) error)
	// techniqueDescTitle is the schema descriptor for title field.
	techniqueDescTitle := techniqueFields[4].Descriptor()
	// technique.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	technique.TitleValidator = techniqueDescTitle.Validators[0].(func(string) error)
	// techniqueDescSubtitle is the schema descriptor for subtitle field.
	techniqueDescSubtitle := techniqueFields[5].Descriptor()
	// technique.SubtitleValidator is a validator for the "subtitle" field. It is called by the builders before save.
	technique.SubtitleValidator = techniqueDescSubtitle.Validators[0].(func(string) error)
	// techniqueDescDescription is the schema descriptor for description field.
	techniqueDescDescription := techniqueFields[6].Descriptor()
	// technique.DescriptionValidator is a validator for the "description" field. It is called by the builders before save.
	technique.DescriptionValidator = techniqueDescDescription.Validators[0].(func(string) error)
	// techniqueDescOrder is the schema descriptor for order field.
	techniqueDescOrder := techniqueFields[7].Descriptor()
	// technique.OrderValidator is a validator for the "order" field. It is called by the builders before save.
	technique.OrderValidator = techniqueDescOrder.Validators[0].(func(int) error)
	unitFields := schema.Unit{}.Fields()
	_ = unitFields
	// unitDescIconImage is the schema descriptor for iconImage field.
	unitDescIconImage := unitFields[2].Descriptor()
	// unit.IconImageValidator is a validator for the "iconImage" field. It is called by the builders before save.
	unit.IconImageValidator = unitDescIconImage.Validators[0].(func(string) error)
	// unitDescCoverImage is the schema descriptor for coverImage field.
	unitDescCoverImage := unitFields[3].Descriptor()
	// unit.CoverImageValidator is a validator for the "coverImage" field. It is called by the builders before save.
	unit.CoverImageValidator = unitDescCoverImage.Validators[0].(func(string) error)
	// unitDescTitle is the schema descriptor for title field.
	unitDescTitle := unitFields[4].Descriptor()
	// unit.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	unit.TitleValidator = unitDescTitle.Validators[0].(func(string) error)
	// unitDescSubtitle is the schema descriptor for subtitle field.
	unitDescSubtitle := unitFields[5].Descriptor()
	// unit.SubtitleValidator is a validator for the "subtitle" field. It is called by the builders before save.
	unit.SubtitleValidator = unitDescSubtitle.Validators[0].(func(string) error)
	// unitDescDescription is the schema descriptor for description field.
	unitDescDescription := unitFields[6].Descriptor()
	// unit.DescriptionValidator is a validator for the "description" field. It is called by the builders before save.
	unit.DescriptionValidator = unitDescDescription.Validators[0].(func(string) error)
	// unitDescMastering is the schema descriptor for mastering field.
	unitDescMastering := unitFields[7].Descriptor()
	// unit.MasteringValidator is a validator for the "mastering" field. It is called by the builders before save.
	unit.MasteringValidator = unitDescMastering.Validators[0].(func(string) error)
	// unitDescDays is the schema descriptor for days field.
	unitDescDays := unitFields[8].Descriptor()
	// unit.DaysValidator is a validator for the "days" field. It is called by the builders before save.
	unit.DaysValidator = unitDescDays.Validators[0].(func(int) error)
	// unitDescColor is the schema descriptor for color field.
	unitDescColor := unitFields[9].Descriptor()
	// unit.ColorValidator is a validator for the "color" field. It is called by the builders before save.
	unit.ColorValidator = unitDescColor.Validators[0].(func(string) error)
	// unitDescOrder is the schema descriptor for order field.
	unitDescOrder := unitFields[10].Descriptor()
	// unit.OrderValidator is a validator for the "order" field. It is called by the builders before save.
	unit.OrderValidator = unitDescOrder.Validators[0].(func(int) error)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescDisplayName is the schema descriptor for displayName field.
	userDescDisplayName := userFields[2].Descriptor()
	// user.DisplayNameValidator is a validator for the "displayName" field. It is called by the builders before save.
	user.DisplayNameValidator = userDescDisplayName.Validators[0].(func(string) error)
	// userDescCreatedAt is the schema descriptor for createdAt field.
	userDescCreatedAt := userFields[3].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the createdAt field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updatedAt field.
	userDescUpdatedAt := userFields[4].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updatedAt field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updatedAt field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[6].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
	// userDescEmailVerified is the schema descriptor for email_verified field.
	userDescEmailVerified := userFields[7].Descriptor()
	// user.DefaultEmailVerified holds the default value on creation for the email_verified field.
	user.DefaultEmailVerified = userDescEmailVerified.Default.(bool)
	userprogressFields := schema.UserProgress{}.Fields()
	_ = userprogressFields
	// userprogressDescProgress is the schema descriptor for progress field.
	userprogressDescProgress := userprogressFields[8].Descriptor()
	// userprogress.DefaultProgress holds the default value on creation for the progress field.
	userprogress.DefaultProgress = userprogressDescProgress.Default.(int64)
	// userprogressDescCreatedAt is the schema descriptor for createdAt field.
	userprogressDescCreatedAt := userprogressFields[10].Descriptor()
	// userprogress.DefaultCreatedAt holds the default value on creation for the createdAt field.
	userprogress.DefaultCreatedAt = userprogressDescCreatedAt.Default.(func() time.Time)
	// userprogressDescUpdatedAt is the schema descriptor for updatedAt field.
	userprogressDescUpdatedAt := userprogressFields[11].Descriptor()
	// userprogress.DefaultUpdatedAt holds the default value on creation for the updatedAt field.
	userprogress.DefaultUpdatedAt = userprogressDescUpdatedAt.Default.(func() time.Time)
	// userprogress.UpdateDefaultUpdatedAt holds the default value on update for the updatedAt field.
	userprogress.UpdateDefaultUpdatedAt = userprogressDescUpdatedAt.UpdateDefault.(func() time.Time)
}
