version: "3"

tasks:
  test:
    cmds:
      - go test -v -coverprofile=coverage.txt ./...
    desc: run unit tests
    sources:
      - "**/*.go"
    generates:
      - coverage.txt

  coverage:
    deps: [test]
    desc: run unit tests and create HTML coverage file
    cmds:
      - go tool cover -html=coverage.txt

  fmt:
    desc: auto-format all go files
    sources:
      - "**/*.go"
    cmds:
      - go fmt ./...
  
  rm_mocks:
    cmds:
    - find . -name '*_mock.go' | xargs rm
    - rm -rf mocks/

  mocks:
    desc: generate mockery mocks
    deps: [rm_mocks]
    cmds:
      - go run .

  docker:
    desc: build the mockery docker image
    cmds:
      - docker build -t vektra/mockery .

  mkdocs.install:
    desc: install mkdocs and plugins
    cmds:
      - pip install -r docs/requirements.txt

  mkdocs.serve:
    desc: serve mkdocs locally
    deps: [mkdocs.install]
    cmds:
      - mkdocs serve

  lint:
    desc: run all the defined linters
    sources:
      - "**/*.go"
    cmds:
      - go run github.com/golangci/golangci-lint/cmd/golangci-lint run

  test.e2e:
    desc: run end-to-end tests
    sources:
      - "**/*.go"
      - "./.mockery.yaml"
    cmds:
      - ./e2e/run_all.sh

  test.ci:
    deps: [fmt, lint]
    cmds:
      - task: mocks
      - task: test
      - task: test.e2e


  default:
    deps: [test.ci]
