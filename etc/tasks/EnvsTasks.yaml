# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

includes:
  tool:
    taskfile: "./ToolTasks.yaml"
    internal: true

vars:
  ENV: ".local"

tasks:
  local:
    desc: "Generate {{.generate}} by concatenating {{.ENV_DIR}}/*.env files"
    silent: true
    vars:
      ENV_DIR: ".envs/{{.ENV}}"
      generate: ".env{{.ENV}}"
    deps: [has-env-dir]
    cmds:
      - task: postgres
      - task: atlas
      - task: server
      - task: directus
      - task: gen-local

  gen-local:
    silent: true
    internal: true
    vars:
      ENV_DIR: ".envs/{{.ENV}}"
      generate: ".env{{.ENV}}"
    sources:
      - "{{.ENV_DIR}}/*.env"
    generates:
      - "{{.generate}}"
    cmds:
      - 'echo "# AUTOGENERATED FILE. DO NOT EDIT." > {{.generate}}'
      - 'echo "# This file is generated by Taskfile." >> {{.generate}}'
      - 'echo "# Any changes will be overwritten. Edit files in {{.ENV_DIR}}" >> {{.generate}}'
      - for: sources
        cmd: "echo '' >> {{.generate}} && cat {{.ITEM}} >> {{.generate}}"

  server:
    internal: true
    silent: true
    deps: [postgres]
    cmds:
      - task: gen-server

  gen-server:
    silent: true
    internal: true
    status:
      - "test -f {{.generate}}"
    vars:
      source: "etc/templates/envs/server.env.template"
      generate: ".envs/{{.ENV}}/.server.env"
      RANDOM_AUTH_JWT_KEY:
        sh: "LC_ALL=C tr -dc 'A-Za-z0-9' < /dev/urandom | head -c 12"
    dotenv:
      - ".envs/{{.ENV}}/.postgres.env"
    env:
      ENVIRONMENT: "development"
      AUTH_JWT_KEY: "{{ .AUTH_JWT_KEY | default .RANDOM_AUTH_JWT_KEY }}"
    cmds:
      - "envsubst < {{.source}} > {{.generate}}"

  directus:
    # internal: true
    silent: true
    deps: [postgres]
    cmds:
      - task: gen-directus

  gen-directus:
    silent: true
    internal: true
    status:
      - "test -f {{.generate}}"
    vars:
      source: "etc/templates/envs/directus.env.template"
      generate: ".envs/{{.ENV}}/.directus.env"
      RANDOM_SECRET:
        sh: "LC_ALL=C tr -dc 'A-Za-z0-9' < /dev/urandom | head -c 32"
      RANDOM_KEY:
        sh: "LC_ALL=C tr -dc 'A-Za-z0-9' < /dev/urandom | head -c 12"
      RANDOM_PASSWORD:
        sh: "LC_ALL=C tr -dc 'A-Za-z0-9' < /dev/urandom | head -c 18"
    dotenv:
      - ".envs/{{.ENV}}/.postgres.env"
    env:
      ENVIRONMENT: "development"
      DIRECTUS_SECRET: "{{ .DIRECTUS_SECRET | default .RANDOM_SECRET }}"
      DIRECTUS_KEY: "{{ .DIRECTUS_KEY | default .RANDOM_KEY }}"
      DIRECTUS_ADMIN_EMAIL: '{{ .DIRECTUS_ADMIN_EMAIL | default "admin@email.invalid"}}'
      DIRECTUS_ADMIN_PASSWORD: "{{ .DIRECTUS_ADMIN_PASSWORD | default .RANDOM_PASSWORD}}"
      DIRECTUS_PUBLIC_URL: '{{ .DIRECTUS_PUBLIC_URL | default "http://localhost:8080/directus/"}}'
    cmds:
      - "envsubst < {{.source}} > {{.generate}}"

  atlas:
    internal: true
    silent: true
    deps: [postgres]
    cmds:
      - task: gen-atlas

  gen-atlas:
    silent: true
    internal: true
    status:
      - "test -f {{.generate}}"
    vars:
      source: "etc/templates/envs/atlas.env.template"
      generate: ".envs/{{.ENV}}/.atlas.env"
    dotenv:
      - ".envs/{{.ENV}}/.postgres.env"
    env:
      ATLAS_ENV: '{{ .ATLAS_ENV | default "local_postgres" }}'
      POSTGRES_REMOTE_HOST: '{{ .POSTGRES_REMOTE_HOST | default "localhost" }}'
      POSTGRES_REMOTE_PORT: '{{ .POSTGRES_REMOTE_PORT | default "25432" }}'
    cmds:
      - "envsubst < {{.source}} > {{.generate}}"

  postgres:
    internal: true
    silent: true
    desc: Generate {{.generate}} file
    cmds:
      - task: gen-postgres

  gen-postgres:
    desc: Generate {{.generate}} file
    silent: true
    internal: true
    status:
      - "test -f {{.generate}}"
    vars:
      source: "etc/templates/envs/postgres.env.template"
      generate: ".envs/{{.ENV}}/.postgres.env"
      POSTGRES_RANDOM_PASSWORD:
        sh: "LC_ALL=C tr -dc 'A-Za-z0-9' < /dev/urandom | head -c 32"
    env:
      POSTGRES_PASSWORD: "{{ .POSTGRES_PASSWORD | default .POSTGRES_RANDOM_PASSWORD }}"
      POSTGRES_USER: '{{ .POSTGRES_USER | default "jhana" }}'
      POSTGRES_HOST: '{{ .POSTGRES_HOST | default "postgres" }}'
      POSTGRES_PORT: '{{ .POSTGRES_PORT | default "5432" }}'
      POSTGRES_DB: '{{ .POSTGRES_DB | default "jhana_dev" }}'
    cmds:
      - "envsubst < {{.source}} > {{.generate}}"

  # internal
  has-env-dir:
    desc: Check if directory exists
    silent: true
    internal: true
    requires:
      vars: [ENV]
    vars:
      ENV_DIR: ".envs/{{.ENV}}"
    status:
      - "test -d {{.ENV_DIR}}"
    cmds:
      - "mkdir -p {{.ENV_DIR}}"
